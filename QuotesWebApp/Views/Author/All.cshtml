@using QuotesWebApp.Service
@model List<AllAuthorViewModel>
@inject RatingService rating

@{
    ViewData["Title"] = "All Author";
    
}
<head>
    <style>
        .ratings {
            list-style-type: none;
            margin: 0;
            padding: 0;
            width: 100%;
            text-align: left; /* За да започват звездите от ляво */
        }

        .star {
            position: relative;
            line-height: 50px;
            display: inline-block;
            transition: color 0.2s ease;
            color: #ebebeb; /* Цветът на неактивните звезди */
        }

            .star:before {
                content: '\2605'; /* Unicode символ за звезда */
                width: 50px;
                height: 50px;
                font-size: 50px;
                display: block;
            }

            .star.full:before {
                color: black; /* Цветът на активните звезди */
            }

            .star.half:before {
                content: '\2605\00a0'; /* Unicode за пълна и празна звезда за половинка */
                position: absolute;
                width: 25px; /* Половината от ширината на звездата за половинка */
                overflow: hidden;
                direction: ltr;
            }
    </style>
</head>

<h1>
    @ViewData["Title"];
</h1>

@if (Model.Any())
{   foreach (var author in Model)
    {

        <div class="card" style="width: 18rem;" data-author-id="@author.Id">
            <div class="card-body">
                <h5 class="card-title">@author.Name</h5>
                <h6 class="card-subtitle mb-2 text-body-secondary">@author.Category</h6>
                <p class="card-text">@author.YearsFromTo</p>
                @{
                    var isRatingZeroForStar = rating.GetRating(author.Id);

                }
                @if (isRatingZeroForStar == 0)
                {
                    <div class="star-rating">
                        <ul class="ratings">
                            <li class="star" onclick="sendRating(@author.Id,1)"></li>
                            <li class="star" onclick="sendRating(@author.Id,2)"></li>
                            <li class="star" onclick="sendRating(@author.Id,3)"></li>
                            <li class="star" onclick="sendRating(@author.Id,4)"></li>
                            <li class="star" onclick="sendRating(@author.Id,5)"></li>
                        </ul>
                    </div>
                }
                else
                {

                    <div class="star-rating" data-rating="@rating.GetRating(author.Id)">
                        <ul class="ratings">
                            <li class="star" onclick="sendRating(@author.Id,1)"></li>
                            <li class="star" onclick="sendRating(@author.Id,2)"></li>
                            <li class="star" onclick="sendRating(@author.Id,3)"></li>
                            <li class="star" onclick="sendRating(@author.Id,4)"></li>
                            <li class="star" onclick="sendRating(@author.Id,5)"></li>
                        </ul>
                    </div>
                    
                }




                <div id="currentRating">
                    @{
                        // need chages
                          var isRatingZero = rating.GetRating(author.Id);
                       

                    }
                    @if (isRatingZero == 0)
                    {
                        // not very good solution 
                        <p>0.00</p>
                    }else
                    {
                        @rating.GetRating(author.Id);
                    }


                </div>


                <form asp-action="CreateQuotes" asp-controller="Quotes" asp-route-autorId="@author.Id" method="get">
                    <input type="hidden" name="authorId" value="@author.Id" />
                    <button type="submit" class="btn btn-sm">Create Quotes</button>
                </form>

                <form asp-controller="Quotes" asp-action="AllQuotes" asp-route-ahtorId="@author.Id" method="get" >

                    <input type="hidden" name="authorId" value="@author.Id"/>
                    <button type="submit" class="btn btn-sm btn-warning">View All Quotes</button>
                </form>
            </div>
        </div>
    }
  
}

<script>


    function sendRating(authorId, starValue) {

        var json = { authorId: authorId, starValue: starValue };
       
        console.log(json);
        $.ajax({
            url: "/api/Rating",
            type: "POST",
            data: JSON.stringify(json),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {

                
                window.location.reload();

            }

        });

    }
    function updateStarRatings() {
        const ratingContainers = document.querySelectorAll('.star-rating');

        ratingContainers.forEach(container => {
            const currentRating = parseFloat(container.getAttribute('data-rating'));
            const stars = container.querySelectorAll('.star');

            stars.forEach((star, index) => {
                star.classList.remove('full', 'half');
                if (index + 1 <= currentRating) {
                    star.classList.add('full');
                } else if (index + 0.5 < currentRating) {
                    star.classList.add('half');
                }
            });
        });
    }

    document.addEventListener('DOMContentLoaded', updateStarRatings);
  
</script>


